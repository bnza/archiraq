dist: bionic

services:
    - postgresql

addons:
    postgresql: "10"
    apt:
        #sources:
            #-   sourceline: deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main
             #   key_url: 'https://www.postgresql.org/media/keys/ACCC4CF8.asc'
        update: true
        packages:
         #   -   postgresql-11
          #  -   postgresql-client-11
            -   postgresql-10-postgis-2.5
            -   postgresql-10-postgis-2.5-scripts

before_script:
#    - sudo service postgresql stop
#    - sudo apt-get --yes remove postgresql\*
#    - sudo apt-get install wget ca-certificates
#    - wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
#    - sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" >> /etc/apt/sources.list.d/pgdg.list'
#    - sudo apt install -yq --no-install-suggests --no-install-recommends postgresql-11-postgis-2.5-scripts postgresql-11 postgresql-client-11 postgresql-11-postgis-2.5
#    - sed -e 's/^port.*/port = 5432/' /etc/postgresql/11/main/postgresql.conf > postgresql.conf
#    - sudo chown postgres postgresql.conf
#    - sudo mv postgresql.conf /etc/postgresql/11/main
#    - sudo cp /etc/postgresql/{10,11}/main/pg_hba.conf
#    - sudo sed -i -e '/local.*peer/s/postgres/all/' -e 's/peer\|md5/trust/g' /etc/postgresql/*/main/pg_hba.conf
#    - sudo echo 'local   all             all                                     trust' > pg_hba.conf
#    - sudo echo 'host    all             all             127.0.0.1/32            trust' >> pg_hba.conf
#    - sudo cp pg_hba.conf /etc/postgresql/11/main/pg_hba.conf
#    - sudo cat /etc/postgresql/11/main/pg_hba.conf
#    - sudo service postgresql start 11
#    - export PATH="/usr/lib/postgresql/11/bin:$PATH"
    -  sudo cp tests/assets/tdd/sql/su.sql /tmp/su.sql
    -  sudo chown postgres /tmp/su.sql
    -  sudo -u postgres psql -f /tmp/su.sql

matrix:
    fast_finish: true
    include:
        -   language: node_js
            sudo: false
            node_js:
                - "8"
            script:
                - NODE_ENV=test yarn test:unit

#        -   language: php
#            sudo: false
#            php:
#                -   "7.1"
#            cache:
#                directories:
#                    -   $HOME/.composer/cache/files
#                    -   $HOME/symfony-bridge/.phpunit
#            before_install:
#                -   echo "memory_limit=2G" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
#                -   if [[ $COVERAGE != true ]]; then phpenv config-rm xdebug.ini || true; fi
#                -   if ! [ -z "$STABILITY" ]; then composer config minimum-stability ${STABILITY}; fi;
#                -   if ! [ -v "$DEPENDENCIES" ]; then composer require --no-update ${DEPENDENCIES}; fi;
#            install:
#                -   COMPOSER_MEMORY_LIMIT=-1 composer update ${COMPOSER_FLAGS} --prefer-dist --no-interaction
#            script:
#                -   bin/phpunit -v $PHPUNIT_FLAGS
#
#        -   language: php
#            sudo: false
#            php:
#                - "7.2"
#            cache:
#                directories:
#                    - $HOME/.composer/cache/files
#                    - $HOME/symfony-bridge/.phpunit
#            before_install:
#                - echo "memory_limit=2G" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
#                - if [[ $COVERAGE != true ]]; then phpenv config-rm xdebug.ini || true; fi
#                - if ! [ -z "$STABILITY" ]; then composer config minimum-stability ${STABILITY}; fi;
#                - if ! [ -v "$DEPENDENCIES" ]; then composer require --no-update ${DEPENDENCIES}; fi;
#            install:
#                - COMPOSER_MEMORY_LIMIT=-1 composer update ${COMPOSER_FLAGS} --prefer-dist --no-interaction
#            script:
#                - bin/phpunit --testdox -v $PHPUNIT_FLAGS
#
#        -   language: php
#            sudo: false
#            php:
#                - "7.2"
#            env:
#                - COVERAGE=true PHPUNIT_FLAGS="--coverage-text"
#            cache:
#                directories:
#                    - $HOME/.composer/cache/files
#                    - $HOME/symfony-bridge/.phpunit
#            before_install:
#                - echo "memory_limit=2G" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
#                - if [[ $COVERAGE != true ]]; then phpenv config-rm xdebug.ini || true; fi
#                - if ! [ -z "$STABILITY" ]; then composer config minimum-stability ${STABILITY}; fi;
#                - if ! [ -v "$DEPENDENCIES" ]; then composer require --no-update ${DEPENDENCIES}; fi;
#            install:
#                - COMPOSER_MEMORY_LIMIT=-1 composer update ${COMPOSER_FLAGS} --prefer-dist --no-interaction
#            script:
#                - bin/phpunit -v $PHPUNIT_FLAGS

#        -   language: php
#            sudo: false
#            php:
#                - "7.2"
#            env:
#                - COMPOSER_FLAGS="--prefer-stable --prefer-lowest" SYMFONY_DEPRECATIONS_HELPER="weak_vendors"
#            cache:
#                directories:
#                    - $HOME/.composer/cache/files
#                    - $HOME/symfony-bridge/.phpunit
#            before_install:
#                - echo "memory_limit=2G" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
#                - if [[ $COVERAGE != true ]]; then phpenv config-rm xdebug.ini || true; fi
#                - if ! [ -z "$STABILITY" ]; then composer config minimum-stability ${STABILITY}; fi;
#                - if ! [ -v "$DEPENDENCIES" ]; then composer require --no-update ${DEPENDENCIES}; fi;
#            install:
#                - COMPOSER_MEMORY_LIMIT=-1 composer update ${COMPOSER_FLAGS} --prefer-dist --no-interaction
#            script:
#                - bin/phpunit -v $PHPUNIT_FLAGS
